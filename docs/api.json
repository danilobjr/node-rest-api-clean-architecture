{
  "openapi": "3.0.0",
  "info": {
    "title": "Ajuda Saude API",
    "description": "https://github.com/labsitio/ajuda-saude-api",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.ajudasaude.com.br"
    }
  ],
  "paths": {
    "/v1/users/admin/signin": {
      "post": {
        "summary": "Log Admin User in",
        "operationId": "adminSignIn",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedSignInRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedAuthenticatedUserResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/users/admin/forgot-password": {
      "post": {
        "summary": "Send an email with link to authorize user to change his password",
        "operationId": "adminForgotPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/users/admin": {
      "get": {
        "summary": "List Administrator users",
        "operationId": "adminUserList",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "searchTerm",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ordering",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Ascending",
                "Descending"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserListResponse"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create an Administrator user",
        "operationId": "adminUserCreate",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserCreateResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/users/admin/{_id}": {
      "get": {
        "summary": "User details",
        "operationId": "adminUserDetails",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserUpdateOrDetailsResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "summary": "Update an user",
        "operationId": "adminUserUpdate",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserUpdateOrDetailsResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/users/admin/cancel-plan": {
      "post": {
        "summary": "Cancel a user plan",
        "operationId": "adminCancelUserPlan",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserCancelPlanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserCancelPlanResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/users/app/signin": {
      "post": {
        "summary": "Log User in",
        "operationId": "appSignIn",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedSignInRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedAuthenticatedUserResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/users/app/signup": {
      "post": {
        "summary": "Create a common user",
        "operationId": "appSingUp",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppSignUpRequestBody"
              }
            }
          }
        },
        "responses": {
          "203": {
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/users/app/activate": {
      "get": {
        "summary": "Activate new user through security code",
        "operationId": "appActivateNewUser",
        "parameters": [
          {
            "in": "query",
            "name": "cellphone",
            "required": true,
            "description": "User cellphone",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "code",
            "required": true,
            "description": "Security code sent to user when signup is successful",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedAuthenticatedUserResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/users/app/resend-activation-code": {
      "get": {
        "summary": "Resend security code",
        "operationId": "appResendActivationCode",
        "parameters": [
          {
            "in": "query",
            "name": "cellphone",
            "required": true,
            "description": "User cellphone",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/users/app/forgot-password": {
      "post": {
        "summary": "Send an email or SMS with link to authorize user to change his password",
        "operationId": "appForgotPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppForgotPasswordRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/users/app/validate-password-recovery-code": {
      "get": {
        "summary": "Validate if security code is still available",
        "operationId": "appValidatePasswordRecoveryCode",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": true,
            "description": "Security code sent to user when he asked for a new password",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppValidatePasswordRecoveryCodeResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/users/app/my-data/{_id}": {
      "patch": {
        "summary": "Update existing user",
        "operationId": "appUserUpdate",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserUpdateResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/users/app/plan/change": {
      "patch": {
        "summary": "Change plan of authenticated user",
        "operationId": "appUserChangePlan",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserChangePlanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUserChangePlanResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/utils/locations/shared/{uf}/cities": {
      "get": {
        "summary": "Get cities by UF",
        "operationId": "appUtilsLocationsGetCitiesByUf",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uf",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUtilsLocationsGetCitiesByUfResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/utils/locations/shared/{zipCode}/info": {
      "get": {
        "summary": "Get location info by CEP",
        "operationId": "utilsLocationsGetLocationInfoByCep",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "zipCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtilsLocationsGetLocationInfoByCepResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "Accepted": {
        "description": "Accepted"
      },
      "BadRequest": {
        "description": "BadRequest",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NoContent": {
        "description": "No Content",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Unprocessable Entity",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "SharedAuthenticatedUserResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "accessToken",
              "user"
            ],
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "Token that grants authorization to User on protected routes"
              },
              "user": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "SharedSignInRequestBody": {
        "type": "object",
        "required": [
          "login",
          "password"
        ],
        "properties": {
          "login": {
            "type": "string",
            "description": "It can be an Email, Cellphone or CPF"
          },
          "password": {
            "type": "string"
          },
          "keepSignedIn": {
            "type": "boolean"
          }
        }
      },
      "AppUserUpdateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "AppUserChangePlanResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          }
        }
      },
      "AdminForgotPasswordRequest": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "AdminUserListResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "AdminUserCreateRequest": {
        "type": "object",
        "required": [
          "name",
          "birthday",
          "cellphone",
          "password",
          "passwordConfirmation",
          "role"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "description": "A string date on ISO format",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          },
          "cpf": {
            "type": "string",
            "minLength": 11,
            "maxLength": 11
          },
          "cellphone": {
            "type": "string",
            "minLength": 10,
            "maxLength": 11
          },
          "email": {
            "type": "string"
          },
          "zipCode": {
            "type": "string",
            "minLength": 8,
            "maxLength": 8
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "passwordConfirmation": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "AdminUserCreateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "createdUser"
            ],
            "properties": {
              "createdUser": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "AdminUserUpdateOrDetailsResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "contractualFine",
              "user",
              "paymentHistory"
            ],
            "properties": {
              "contractualFine": {
                "type": "number"
              },
              "user": {
                "$ref": "#/components/schemas/User"
              },
              "paymentHistory": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      },
      "AppUserUpdateRequest": {
        "type": "object",
        "required": [
          "name",
          "birthday",
          "gender",
          "cellphone",
          "email",
          "cpf"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          },
          "cellphone": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "cpf": {
            "type": "string"
          },
          "addressZipCode": {
            "type": "string",
            "minLength": 8,
            "maxLength": 8
          }
        }
      },
      "AppSignUpRequestBody": {
        "type": "object",
        "required": [
          "name",
          "birthday",
          "cellphone",
          "password",
          "passwordConfirmation",
          "role"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "description": "A string date on ISO format",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          },
          "cpf": {
            "type": "string",
            "minLength": 11,
            "maxLength": 11
          },
          "cellphone": {
            "type": "string",
            "minLength": 10,
            "maxLength": 11
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "zipCode": {
            "type": "string",
            "minLength": 8,
            "maxLength": 8
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8
          },
          "passwordConfirmation": {
            "type": "string",
            "format": "password"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "AppUtilsLocationsGetCitiesByUfResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/City"
            }
          }
        }
      },
      "UtilsLocationsGetLocationInfoByCepResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LocationInfo"
          }
        }
      },
      "AuthenticatedUser": {
        "type": "object",
        "required": [
          "name",
          "birthday",
          "gender",
          "role"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          },
          "cellphone": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "birthday",
          "gender",
          "cellphone",
          "email",
          "cpf",
          "role",
          "cards",
          "address"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          },
          "cpf": {
            "type": "string"
          },
          "cellphone": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserCard"
            }
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "administrador",
          "premium",
          "free",
          "debtor"
        ]
      },
      "Address": {
        "type": "object",
        "required": [
          "zipCode",
          "street",
          "streetNumber",
          "neighborhood",
          "additionalInfo",
          "state",
          "city"
        ],
        "properties": {
          "zipCode": {
            "type": "string",
            "minLength": 8,
            "maxLength": 8
          },
          "street": {
            "type": "string"
          },
          "streetNumber": {
            "type": "number"
          },
          "neighborhood": {
            "type": "string"
          },
          "additionalInfo": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "city": {
            "type": "string"
          }
        }
      },
      "State": {
        "type": "string",
        "enum": [
          "AC",
          "AL",
          "AP",
          "AM",
          "BA",
          "CE",
          "DF",
          "ES",
          "GO",
          "MA",
          "MT",
          "MS",
          "MG",
          "PA",
          "PB",
          "PR",
          "PE",
          "PI",
          "RJ",
          "RN",
          "RS",
          "RO",
          "RR",
          "SC",
          "SP",
          "SE",
          "TO"
        ]
      },
      "City": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "LocationInfo": {
        "type": "object",
        "required": [
          "zipCode",
          "state",
          "city",
          "street",
          "neighborhood"
        ],
        "properties": {
          "zipCode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "neighborhood": {
            "type": "string"
          }
        }
      },
      "Question": {
        "type": "object",
        "required": [
          "_id",
          "category",
          "description",
          "type",
          "answerType",
          "answers",
          "isHeight",
          "isWeight",
          "age",
          "imc",
          "autoComplete",
          "fill",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/QuestionType"
          },
          "answerType": {
            "$ref": "#/components/schemas/AnswerType"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answer"
            }
          },
          "isHeight": {
            "type": "boolean"
          },
          "isWeight": {
            "type": "boolean"
          },
          "age": {
            "$ref": "#/components/schemas/ConditionObjectType"
          },
          "imc": {
            "$ref": "#/components/schemas/ConditionObjectType"
          },
          "autoComplete": {
            "type": "object",
            "required": [
              "label",
              "addedDescription",
              "collectionName",
              "defaultAnswer"
            ],
            "properties": {
              "label": {
                "type": "string"
              },
              "addedDescription": {
                "type": "string"
              },
              "collectionName": {
                "type": "string"
              },
              "defaultAnswer": {
                "type": "string"
              }
            }
          },
          "fill": {
            "type": "object",
            "required": [
              "label",
              "mask",
              "keyboardType",
              "disabled",
              "value"
            ],
            "properties": {
              "label": {
                "type": "string"
              },
              "mask": {
                "type": "string"
              },
              "keyboardType": {
                "type": "string"
              },
              "disabled": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "QuestionType": {
        "type": "string",
        "enum": [
          "COMPLEMENTAR",
          "ESSENCIAL"
        ]
      },
      "Answer": {
        "type": "object",
        "required": [
          "_id",
          "description",
          "tags",
          "supplementaryQuestions",
          "medicalRecord",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supplementaryQuestions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "medicalRecord": {
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "AnswerType": {
        "type": "string",
        "enum": [
          "MULTIPLAESCOLHA",
          "ESCOLHA",
          "PREENCHIMENTO",
          "AUTOMATICO",
          "AUTOCOMPLETE"
        ]
      },
      "HealthQuestionnaire": {
        "type": "object",
        "required": [
          "_id",
          "user",
          "questionFlow"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "string"
              }
            ]
          },
          "questionFlow": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserQuestionFlow"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "UserQuestionFlow": {
        "type": "object",
        "required": [
          "category",
          "questionsId",
          "answeredQuestions",
          "isCompleted",
          "wasAnsweredOnce",
          "lastAnsweredQuestion"
        ],
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "questionsId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "answeredQuestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserQuestionAnswered"
            }
          },
          "isCompleted": {
            "type": "boolean"
          },
          "wasAnsweredOnce": {
            "type": "boolean"
          },
          "lastAnsweredQuestion": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UserQuestionAnswered": {
        "type": "object",
        "required": [
          "questionId",
          "description",
          "isHeight",
          "isWeight",
          "answers"
        ],
        "properties": {
          "questionId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "isHeight": {
            "type": "boolean"
          },
          "isWeight?": {
            "type": "boolean"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectedAnswer"
            }
          }
        }
      },
      "SelectedAnswer": {
        "type": "object",
        "required": [
          "answerId",
          "answer",
          "tags",
          "medicalRecord"
        ],
        "properties": {
          "answerId": {
            "type": "string",
            "format": "uuid"
          },
          "answer": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "medicalRecord": {
            "type": "object"
          }
        }
      },
      "Category": {
        "type": "object",
        "required": [
          "_id",
          "description",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "QuestionsFlowType": {
        "type": "object",
        "required": [
          "category",
          "questionsId"
        ],
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "questionsId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ConditionObjectType": {
        "type": "object",
        "required": [
          "value",
          "condition"
        ],
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "condition": {
            "$ref": "#/components/schemas/ConditionType"
          }
        }
      },
      "ConditionType": {
        "type": "string",
        "enum": [
          "MAIOR",
          "MENOR",
          "IGUAL",
          "ENTRE"
        ]
      },
      "Error": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
